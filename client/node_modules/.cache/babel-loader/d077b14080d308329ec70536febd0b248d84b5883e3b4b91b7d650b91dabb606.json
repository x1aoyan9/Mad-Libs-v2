{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sarah\\\\OneDrive\\\\Desktop\\\\independent_projects\\\\solo2\\\\client\\\\src\\\\components\\\\ButtonRandom.jsx\",\n  _s = $RefreshSig$();\n// src = \"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore-min.js\";\n\n// const { Input } = require(\"@material-ui/icons\");\n\n// import myJson from './dictionary.json' assert {type: 'json'};\n\n// var dict = JSON.parse(myJson.dictionary);\n\n// WORD RANDOMIZER (BUTTON)\n\nimport React, { useState, useEffect } from 'react';\nimport { Menu } from '@headlessui/react';\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { GrHomeRounded } from 'react-icons/gr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ButtonRandom() {\n  _s();\n  // Noun\n  const generateNoun = () => {\n    // 200 nouns\n    const nounArray = ['Actor', 'Advertisement', 'Afternoon', 'Airport', 'Ambulance', 'Animal', 'Answer', 'Apple', 'Army', 'Australia', 'Balloon', 'Banana', 'Bank', 'Battery', 'Beach', 'Beard', 'Bed', 'Belgium', 'Boy', 'Branch', 'Breakfast', 'Bridge', 'Brother', 'Camera', 'Candle', 'Car', 'Caravan', 'Carpet', 'Cartoon', 'China', 'Church', 'Coffee', 'Crayon', 'Crowd', 'Daughter', 'Death', 'Denmark', 'Diamond', 'Dinner', 'Disease', 'Doctor', 'Dog', 'Dream', 'Dress', 'Drum', 'Easter', 'Egg', 'Eggplant', 'Egypt', 'Elephant', 'Energy', 'Engine', 'England', 'Evening', 'Eye', 'Family', 'Finland', 'Fish', 'Flag', 'Flower', 'Flute', 'Football', 'Forest', 'Fork', 'Fountain', 'France', 'Furniture', 'Garage', 'Garden', 'Gas', 'Ghost', 'Girl', 'Glass', 'Gold', 'Grass', 'Greece', 'Guitar', 'Hair', 'Hairbrush', 'Hamburger', 'Helicopter', 'Helmet', 'Holiday', 'Honey', 'Horse', 'Hospital', 'House', 'Hydrogen', 'Ice', 'Insect', 'Insurance', 'Iron', 'Island', 'Jam', 'Jelly', 'Jewel', 'Judge', 'Juice', 'Kangaroo', 'King', 'Kitchen', 'Kite', 'Knife', 'Knight', 'Lamp', 'Lawyer', 'Letter', 'Library', 'Lighter', 'Lion', 'Lizard', 'Lock', 'London', 'Lunch', 'Machine', 'Magazine', 'Magician', 'Manchester', 'Market', 'Match', 'Microscope', 'Microwave', 'Monkey', 'Morning', 'Motorcycle', 'Nail', 'Napkin', 'Needle', 'Nest', 'Nigeria', 'Night', 'Notebook', 'Ocean', 'Oil', 'Orange', 'Oxygen', 'Oyster', 'Painting', 'Park', 'Parrot', 'Pencil', 'Piano', 'Pillow', 'Pizza', 'Planet', 'Plate', 'Portugal', 'Potato', 'Queen', 'Quill', 'Rain', 'Rainbow', 'Raincoat', 'Refrigerator', 'Restaurant', 'River', 'Rocket', 'Room', 'Rose', 'Rwanda', 'Sandwich', 'School', 'Scooter', 'Shampoo', 'Shoe', 'Soccer', 'Spoon', 'Sprinkler', 'Stone', 'Sugar', 'Sweden', 'Teacher', 'Telephone', 'Tent', 'Thailand', 'Tomato', 'Toothbrush', 'Traffic', 'Train', 'Truck', 'Trumpet', 'Umbrella', 'Universe', 'Van', 'Vase', 'Vegetable', 'Volcano', 'Wall', 'Whale', 'Window', 'Wine', 'Wire', 'Xylophone', 'Yacht', 'Yellow', 'Youtube', 'Yoyo', 'Zebra', 'Zipper', 'Zoo'];\n    let max = nounArray.length - 1;\n    let min = 0;\n    let RN = Math.floor(Math.random() * (max - min + 1));\n    let resultingN = nounArray[RN];\n    console.log(setRandomNoun(resultingN.randomNoun));\n  };\n\n  // Plural Noun\n  const generatePluralNoun = () => {\n    // 200 plural nouns\n    const pluralNounArray = ['Actors', 'Advertisements', 'Afternoons', 'Airports', 'Ambulances', 'Animals', 'Answers', 'Apples', 'Armies', 'Atmospheres', 'Balloons', 'Bananas', 'Banks', 'Batteries', 'Beaches', 'Beards', 'Beds', 'Birds', 'Boys', 'Branches', 'Breakfasts', 'Bridges', 'Brothers', 'Cameras', 'Candles', 'Cars', 'Caravans', 'Carpets', 'Cartoons', 'Chocolates', 'Churches', 'Coffees', 'Crayons', 'Crowds', 'Daughters', 'Deaths', 'Debts', 'Diamonds', 'Dinners', 'Diseases', 'Doctors', 'Dogs', 'Dreams', 'Dresses', 'Drums', 'Ears', 'Editors', 'Eggs', 'Eggplants', 'Elephants', 'Empires', 'Engines', 'Evenings', 'Expressions', 'Eyes', 'Facilities', 'Facts', 'Families', 'Fishes', 'Flags', 'Flights', 'Flowers', 'Flutes', 'Footballs', 'Forests', 'Forks', 'Fountains', 'Garages', 'Gardens', 'Gases', 'Ghosts', 'Girls', 'Glasses', 'Governments', 'Grasses', 'Groceries', 'Guitars', 'Hairs', 'Hairbrushes', 'Hamburgers', 'Hats', 'Helicopters', 'Helmets', 'Holidays', 'Horses', 'Hospitals', 'Hotels', 'Houses', 'Iceburgs', 'Insects', 'Insurances', 'Irons', 'Islands', 'Jams', 'Jellys', 'Jewels', 'Judges', 'Juices', 'Kangaroos', 'Kings', 'Kitchens', 'Kites', 'Knives', 'Knights', 'Labs', 'Lamps', 'Lawyers', 'Letters', 'Libraries', 'Lighters', 'Lions', 'Lizards', 'Locks', 'Lunches', 'Machines', 'Magazines', 'Magicians', 'Maps', 'Markets', 'Matches', 'Microscopes', 'Microwaves', 'Monkeys', 'Mornings', 'Motorcycles', 'Nails', 'Napkins', 'Needles', 'Nests', 'Newpapers', 'Nights', 'Notebooks', 'Oceans', 'Oils', 'Oranges', 'Ovens', 'Oysters', 'Paintings', 'Parks', 'Parrots', 'Pencils', 'Photos', 'Pianos', 'Pillows', 'Pizzas', 'Planets', 'Plates', 'Potatoes', 'Queens', 'Quills', 'Rainbows', 'Raincoats', 'Recipes', 'Reflections', 'Refrigerators', 'Restaurants', 'Rivers', 'Rockets', 'Rooms', 'Roses', 'Sandwiches', 'Schools', 'Scooters', 'Shampoos', 'Shirts', 'Shoes', 'Spoons', 'Sprinklers', 'Stones', 'Students', 'Sugars', 'Teachers', 'Telephones', 'Televisions', 'Tents', 'Tomatoes', 'Toothbrushes', 'Towns', 'Trains', 'Trucks', 'Trumpets', 'Umbrellas', 'Uncles', 'Vans', 'Vases', 'Vegetables', 'Volcanoes', 'Walls', 'Whales', 'Windows', 'Wines', 'Wires', 'Xylophones', 'Yachts', 'Years', 'Youths', 'Yoyos', 'Zebras', 'Zippers', 'Zoos'];\n    let max2 = pluralNounArray.length - 1;\n    let min2 = 0;\n    let RPN = Math.floor(Math.random() * (max2 - min2 + 1));\n    let resultingPN = pluralNounArray[RPN];\n    setRandomPluralNoun(resultingPN.randomPluralNoun);\n  };\n\n  // Verb\n  const generateVerb = () => {\n    // 200 verbs\n    const verbArray = ['Accept', 'Achieve', 'Add', 'Admire', 'Adopt', 'Advise', 'Age', 'Agree', 'Allow', 'Announce', 'Appreciate', 'Approve', 'Argue', 'Arrive', 'Ask', 'Assist', 'Attack', 'Bake', 'Balance', 'Bathe', 'Be', 'Beat', 'Become', 'Beg', 'Behave', 'Bet', 'Boast', 'Boil', 'Borrow', 'Breathe', 'Bring', 'Build', 'Burn', 'Bury', 'Buy', 'Call', 'Catch', 'Challenge', 'Change', 'Cheat', 'Chew', 'Choose', 'Clap', 'Clean', 'Collect', 'Compare', 'Complain', 'Confess', 'Confuse', 'Construct', 'Control', 'Copy', 'Count', 'Create', 'Cry', 'Damage', 'Dance', 'Deliver', 'Destroy', 'Devote', 'Disagree', 'Drag', 'Drift', 'Drive', 'Drop', 'Earn', 'Eat', 'Employ', 'Encourage', 'Enjoy', 'Establish', 'Estimate', 'Exercise', 'Expand', 'Explain', 'Fear', 'Feel', 'Fight', 'Find', 'Fly', 'Forget', 'Forgive', 'Fry', 'Gather', 'Get', 'Give', 'Glow', 'Greet', 'Grow', 'Guess', 'Harass', 'Hate', 'Hear', 'Help', 'Hit', 'Hope', 'Identify', 'Intend', 'Interrupt', 'Introduce', 'Irritate', 'Jump', 'Keep', 'Kick', 'Kiss', 'Laugh', 'Learn', 'Leave', 'Lend', 'Lie', 'Lift', 'Like', 'Listen', 'Live', 'Look', 'Lose', 'Love', 'Make', 'Marry', 'Measure', 'Meet', 'Move', 'Murder', 'Obey', 'Offend', 'Offer', 'Open', 'Owe', 'Paint', 'Pay', 'Peer', 'Pick', 'Play', 'Pray', 'Print', 'Promote', 'Propose', 'Pull', 'Punch', 'Punish', 'Purchase', 'Push', 'Quit', 'Race', 'Read', 'Recall', 'Relax', 'Remember', 'Reply', 'Resolve', 'Retire', 'Rise', 'Rub', 'See', 'Select', 'Sell', 'Send', 'Sing', 'Sink', 'Snore', 'Speed', 'Spot', 'Stand', 'Stare', 'Start', 'Stop', 'Struggle', 'Study', 'Substitute', 'Sweep', 'Swim', 'Tackle', 'Take', 'Talk', 'Teach', 'Tear', 'Telephone', 'Tell', 'Thank', 'Train', 'Travel', 'Try', 'Type', 'Understand', 'Use', 'Value', 'Visit', 'Vow', 'Wait', 'Walk', 'Want', 'Warn', 'Wed', 'Weep', 'Win', 'Wink', 'Worry', 'Write', 'Yell', 'Yearn'];\n    let max3 = verbArray.length - 1;\n    let min3 = 0;\n    let RV = Math.floor(Math.random() * (max3 - min3 + 1));\n    let resultingV = verbArray[RV];\n    setRandomVerb(resultingV.randomVerb);\n  };\n\n  // Verb -ING\n  const generateVerbING = () => {\n    // 200 verbs ending in -ING\n    const verbINGArray = ['Accepting', 'Achieving', 'Adding', 'Admiring', 'Adopting', 'Advising', 'Aging', 'Agreeing', 'Allowing', 'Announcing', 'Appreciating', 'Approving', 'Arguing', 'Arriving', 'Asking', 'Assisting', 'Attacking', 'Baking', 'Balancing', 'Bathing', 'Being', 'Beating', 'Becoming', 'Begging', 'Behaving', 'Betting', 'Boasting', 'Boiling', 'Borrowing', 'Breathing', 'Bringing', 'Building', 'Burning', 'Burying', 'Buying', 'Calling', 'Catching', 'Challenging', 'Changing', 'Cheating', 'Chewing', 'Choosing', 'Clapping', 'Cleaning', 'Collecting', 'Comparing', 'Complaining', 'Confessing', 'Confusing', 'Constructing', 'Controlling', 'Copying', 'Counting', 'Creating', 'Crying', 'Damaging', 'Dancing', 'Delivering', 'Destroying', 'Devoting', 'Disagreeing', 'Dragging', 'Drifting', 'Driving', 'Dropping', 'Earning', 'Eating', 'Employing', 'Encouraging', 'Enjoying', 'Establishing', 'Estimating', 'Exercising', 'Expanding', 'Explaining', 'Fearing', 'Feeling', 'Fighting', 'Finding', 'Flying', 'Forgeting', 'Forgiving', 'Frying', 'Gathering', 'Getting', 'Giving', 'Glowing', 'Greeting', 'Growing', 'Guessing', 'Harassing', 'Hating', 'Hearing', 'Helping', 'Hitting', 'Hoping', 'Identifying', 'Intending', 'Interrupting', 'Introducing', 'Irritating', 'Jumping', 'Keeping', 'Kicking', 'Kissing', 'Laughing', 'Learning', 'Leaving', 'Lending', 'Lying', 'Lifting', 'Liking', 'Listening', 'Living', 'Looking', 'Losing', 'Loving', 'Making', 'Marrying', 'Measuring', 'Meeting', 'Moving', 'Murdering', 'Obeying', 'Offending', 'Offering', 'Opening', 'Owing', 'Painting', 'Paying', 'Peering', 'Picking', 'Playing', 'Praying', 'Printing', 'Promoting', 'Proposing', 'Pulling', 'Punching', 'Punishing', 'Purchasing', 'Pushing', 'Quitting', 'Racing', 'Reading', 'Recalling', 'Relaxing', 'Remembering', 'Replying', 'Resolving', 'Retiring', 'Rising', 'Rubbing', 'Seeing', 'Selecting', 'Selling', 'Sending', 'Singing', 'Sinking', 'Snoring', 'Speeding', 'Spotting', 'Standing', 'Staring', 'Starting', 'Stopping', 'Struggling', 'Studying', 'Substituting', 'Sweeping', 'Swimming', 'Tackling', 'Taking', 'Talking', 'Teaching', 'Tearing', 'Telephoning', 'Telling', 'Thanking', 'Training', 'Traveling', 'Trying', 'Typing', 'Understanding', 'Using', 'Valuing', 'Visiting', 'Vowing', 'Waiting', 'Walking', 'Wanting', 'Warning', 'Waving', 'Weeping', 'Winning', 'Winking', 'Worrying', 'Writing', 'Yelling', 'Yearning'];\n    let max4 = verbINGArray.length - 1;\n    let min4 = 0;\n    let RVING = Math.floor(Math.random() * (max4 - min4 + 1));\n    let resultingVING = verbINGArray[RVING];\n    setRandomVerbING(resultingVING.randomVerbING);\n  };\n\n  // Adverb\n  const generateAdverb = () => {\n    // 200 adverbs\n    const adverbArray = ['Absentmindedly', 'Accidentally', 'Actually', 'Adventurously', 'Afterward', 'Almost', 'Always', 'Angrily', 'Anually', 'Anxiously', 'Arrogantly', 'Awkwardly', 'Bashfully', 'Beautifully', 'Bitterly', 'Bleakly', 'Blindly', 'Blissfully', 'Boastfully', 'Boldly', 'Bravely', 'Briefly', 'Brightly', 'Briskly', 'Broadly', 'Busily', 'Calmly', 'Carefully', 'Carelessly', 'Cautiously', 'Certainly', 'Cheerfully', 'Clearly', 'Cleverly', 'Closely', 'Coaxingly', 'Colorfully', 'Commonly', 'Continually', 'Coolly', 'Correctly', 'Courageously', 'Crossly', 'Cruelly', 'Curiously', 'Daily', 'Daintily', 'Dearly', 'Deceivingly', 'Deeply', 'Defiantly', 'Deliberately', 'Delightfully', 'Diligently', 'Dimly', 'Doubtfully', 'Dreamily', 'Easily', 'Elegantly', 'Energetically', 'Enormously', 'Enthusiastically', 'Equally', 'Especially', 'Evenly', 'Eventually', 'Exactly', 'Excitedly', 'Extremely', 'Fairly', 'Faithfully', 'Famously', 'Hopefully', 'Hungrily', 'Immediately', 'Innocently', 'Inquisitively', 'Instantly', 'Intensely', 'Interestingly', 'Inwardly', 'Irritably', 'Jaggedly', 'Loosely', 'Nearly', 'Neatly', 'Nervously', 'Never', 'Nicely', 'Noisily', 'Not', 'Obediently', 'Obnoxiously', 'Oddly', 'Offensively', 'Officially', 'Often', 'Only', 'Openly', 'Optimistically', 'Overconfidently', 'Painfully', 'Partially', 'Patiently', 'Permanently', 'Perfectly', 'Personally', 'Physically', 'Playfully', 'Politely', 'Poorly', 'Positively', 'Potentially', 'Powerfully', 'Promptly', 'Properly', 'Punctually', 'Quintly', 'Queasily', 'Questionably', 'Quicker', 'Quickly', 'Quietly', 'Quirkly', 'Quizzically', 'Randomly', 'Rapidly', 'Rarely', 'Readily', 'Really', 'Reassuringly', 'Recklessly', 'Regularly', 'Reluctantly', 'Repeatedly', 'Reproachfully', 'Restfully', 'Righteously', 'Rightfully', 'Rigidly', 'Roughly', 'Rudely', 'Safely', 'Scarcely', 'Scarily', 'Searchingly', 'Sedately', 'Seemingly', 'Seldomly', 'Selfishly', 'Separately', 'Seriously', 'Shakily', 'Sharply', 'Sheepishly', 'Shrilly', 'Shyly', 'Silently', 'Sleepily', 'Slowly', 'Smoothly', 'Softly', 'Solemnly', 'Solidly', 'Sometimes', 'Soon', 'Speedily', 'Stealthily', 'Sternly', 'Strictly', 'Successfully', 'Suddenly', 'Supposedly', 'Surprisingly', 'Suspiciously', 'Sweetly', 'Swiftly', 'Sympathetically', 'Tenderly', 'Tensely', 'Terribly', 'Thankfully', 'Thoroughly', 'Thoughtfully', 'Tightly', 'Tommorrow', 'Too', 'Tremendously', 'Triumphantly', 'Truly', 'Ultimately', 'Unabashedly', 'Unaccountably', 'Unbearably', 'Unethically', 'Unexpectedly', 'Unfortunately', 'Unimpressively', 'Unnaturally', 'Urgently'];\n    let max5 = adverbArray.length - 1;\n    let min5 = 0;\n    let RADV = Math.floor(Math.random() * (max5 - min5 + 1));\n    let resultingADV = adverbArray[RADV];\n    setRandomAdverb(resultingADV.randomAdverb);\n  };\n\n  // Adjective\n  const generateAdjective = () => {\n    // 200 adjectives\n    const adjectiveArray = ['Abandoned', 'Abnormal', 'Absolute', 'Acedemic', 'Accidental', 'Accurate', 'Active', 'Adaptable', 'Adjustable', 'Adventurous', 'Afraid', 'Alert', 'Ambitious', 'Ancient', 'Arrogant', 'Average', 'Awful', 'Bashful', 'Basic', 'Beautiful', 'Best', 'Big', 'Bitter', 'Black', 'Blue', 'Blushing', 'Boring', 'Brave', 'Breezy', 'Bumpy', 'Busy', 'Calm', 'Careless', 'Caring', 'Cautious', 'Charming', 'Cheap', 'Chilly', 'Colorful', 'Common', 'Cool', 'Curly', 'Cute', 'Damaged', 'Damp', 'Dark', 'Depressed', 'Descriptive', 'Different', 'Difficult', 'Dirty', 'Dry', 'Dull', 'Dusty', 'Eager', 'Easy', 'Earthy', 'Edible', 'Efficient', 'Emotional', 'Empty', 'Exclusive', 'Exotic', 'Expensive', 'Far', 'Fast', 'Fat', 'Flaky', 'Flat', 'Flimsy', 'Foreign', 'Fresh', 'Full', 'Funny', 'Furry', 'Gaudy', 'Gentle', 'Gifted', 'Good', 'Great', 'Greedy', 'Green', 'Grey', 'Groovy', 'Grumpy', 'Gullible', 'Hairy', 'Handy', 'Happy', 'Hard', 'Heavy', 'Hesitant', 'Hilarious', 'Hollow', 'Hot', 'Icky', 'Icy', 'Ignorant', 'Ill', 'Important', 'Insidious', 'Invincible', 'Jaded', 'Jolly', 'Joyous', 'Juicy', 'Kind', 'Large', 'Late', 'Lazy', 'Lean', 'Left', 'Light', 'Little', 'Long', 'Loud', 'Loving', 'Lucky', 'Lush', 'Mad', 'Magenta', 'Magical', 'Many', 'Mature', 'Mean', 'Mellow', 'Melted', 'Mixed', 'Muddy', 'Narrow', 'Natural', 'Neat', 'Nervous', 'New', 'Nice', 'Nifty', 'Nimble', 'Noisy', 'Observant', 'Odd', 'Old', 'Omniscient', 'Open', 'Orange', 'Ordinary', 'Organic', 'Outgoing', 'Overrated', 'Perfect', 'Pink', 'Popular', 'Precious', 'Pretty', 'Private', 'Proud', 'Purple', 'Pushy', 'Quick', 'Quiet', 'Quiky', 'Rare', 'Ratty', 'Red', 'Rhetorical', 'Ripe', 'Rough', 'Round', 'Rude', 'Salty', 'Scarce', 'Secret', 'Shy', 'Sleepy', 'Sour', 'Spicy', 'Steep', 'Stiff', 'Suspicious', 'Sweet', 'Tall', 'Tangy', 'Tense', 'Terrible', 'Thick', 'Tidy', 'Tiny', 'Tired', 'Tricky', 'Ugly', 'Unbiased', 'Unique', 'Upset', 'Vague', 'Warm', 'Weak', 'Wet', 'Whole', 'Wise', 'Young', 'Zesty'];\n    let max6 = adjectiveArray.length - 1;\n    let min6 = 0;\n    let RADJ = Math.floor(Math.random() * (max6 - min6 + 1));\n    let resultingADJ = adjectiveArray[RADJ];\n    setRandomAdjective(resultingADJ.randomAdjective);\n  };\n\n  // Body Part\n  const generateBodyPart = () => {\n    // 29 body part\n    const bodyPartArray = ['Arm', 'Cheek', 'Chest', 'Chin', 'Ear', 'Elbow', 'Eyebrow', 'Eye', 'Face', 'Finger', 'Foot', 'Forehead', 'Hand', 'Hair', 'Head', 'Heel', 'Jaw', 'Knee', 'Knuckle', 'Leg', 'Mouth', 'Neck', 'Nose', 'Shin', 'Shoulder', 'Stomach', 'Toe', 'Tongue', 'Tooth'];\n    let max7 = bodyPartArray.length - 1;\n    let min7 = 0;\n    let RBP = Math.floor(Math.random() * (max7 - min7 + 1));\n    let resultingBP = bodyPartArray[RBP];\n    setRandomBodyPart(resultingBP.randomBodyPart);\n  };\n\n  // Body Parts\n  const generateBodyParts = () => {\n    // 20 body parts\n    const bodyPartsArray = ['Arms', 'Cheeks', 'Ears', 'Elbows', 'Eyebrows', 'Eyes', 'Fingers', 'Feet', 'Hands', 'Hairs', 'Heels', 'Knees', 'Knuckles', 'Legs', 'Nails', 'Shins', 'Shoulders', 'Teeth', 'Toes', 'Tonsils'];\n    let max8 = bodyPartsArray.length - 1;\n    let min8 = 0;\n    let RBPS = Math.floor(Math.random() * (max8 - min8 + 1));\n    let resultingBPS = bodyPartsArray[RBPS];\n    setRandomBodyParts(resultingBPS.randomBodyParts);\n  };\n\n  // Location\n  const generateLocation = () => {\n    // 28 locations\n    const locationArray = ['City', 'Home', 'Hospital', 'Office', 'Park', 'School', 'Veterinarian', 'Adana, Turkey', 'Akita, Japan', 'Athens, Greece', 'Bangkok, Thailand', 'Beijing, China', 'Berlin, Germany', 'Cairo, Egypt', 'Chicago, IL', 'Delavan, WI', 'Dublin, Ireland', 'Fargo, ND', 'Havana, Cuba', 'London, England', 'Montreal, Canada', 'Newcastle, Australia', 'Odense, Denmark', 'Paris, France', 'Rome, Italy', 'Seoul, South Korea', 'Sevilla, Spain', 'Warsaw, Poland'];\n    let max9 = locationArray.length - 1;\n    let min9 = 0;\n    let RL = Math.floor(Math.random() * (max9 - min9 + 1));\n    let resultingL = locationArray[RL];\n    setRandomLocation(resultingL.randomLocation);\n  };\n\n  // Color\n  const generateColor = () => {\n    // 40 colors\n    const colorArray = ['red', 'maroon', 'mauve', 'fuchsia', 'magenta', 'peach', 'pink', 'orange', 'tangerine', 'yellow', 'lemon', 'green', 'mint', 'jade', 'lime', 'emerald', 'olive', 'blue', 'cyan', 'denim', 'indigo', 'teal', 'turquoise', 'navy', 'purple', 'lavender', 'violet', 'amethyst', 'plum', 'black', 'white', 'grey', 'gold', 'silver', 'bronze', 'amber', 'tan', 'brown'];\n    let max10 = colorArray.length - 1;\n    let min10 = 0;\n    let RC = Math.floor(Math.random() * (max10 - min10 + 1));\n    let resultingC = colorArray[RC];\n    setRandomColor(resultingC.randomColor);\n  };\n\n  // Number\n  const generateNumber = () => {\n    // random number generator\n    let max11 = 1000;\n    let min11 = 0;\n    let RN = Math.floor(Math.random() * (max11 - min11 + 1));\n    setRandomNum(RN.randomNum);\n  };\n  const [randomNoun, setRandomNoun] = useState('');\n  const [randomPluralNoun, setRandomPluralNoun] = useState('');\n  const [randomVerb, setRandomVerb] = useState('');\n  const [randomVerbING, setRandomVerbING] = useState('');\n  const [randomAdverb, setRandomAdverb] = useState('');\n  const [randomAdjective, setRandomAdjective] = useState('');\n  const [randomBodyPart, setRandomBodyPart] = useState('');\n  const [randomBodyParts, setRandomBodyParts] = useState('');\n  const [randomLocation, setRandomLocation] = useState('');\n  const [randomColor, setRandomColor] = useState('');\n  const [randomNum, setRandomNum] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"px-6 py-10 ring-1 ring-slate-900/5 shadow-xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-slate-900 mt-5 text-base font-medium\",\n      children: \"Random Word Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-slate-500 dark:text-slate-400 mt-2 text-xs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"display-results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-red-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3 sm:mb-3\",\n          children: \"Noun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-green-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Plural Noun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-purple-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Verb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-blue-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Verb-ING\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-orange-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Adverb\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-teal-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-pink-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Body Part\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-yellow-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Body Parts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-emerald-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-sky-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-rose-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 9\n  }, this);\n}\n_s(ButtonRandom, \"EppDVtHybHCzCWPA59XAdE7+k8E=\");\n_c = ButtonRandom;\nvar _c;\n$RefreshReg$(_c, \"ButtonRandom\");","map":{"version":3,"names":["React","useState","useEffect","Menu","Bars3Icon","XMarkIcon","GrHomeRounded","ButtonRandom","generateNoun","nounArray","max","length","min","RN","Math","floor","random","resultingN","console","log","setRandomNoun","randomNoun","generatePluralNoun","pluralNounArray","max2","min2","RPN","resultingPN","setRandomPluralNoun","randomPluralNoun","generateVerb","verbArray","max3","min3","RV","resultingV","setRandomVerb","randomVerb","generateVerbING","verbINGArray","max4","min4","RVING","resultingVING","setRandomVerbING","randomVerbING","generateAdverb","adverbArray","max5","min5","RADV","resultingADV","setRandomAdverb","randomAdverb","generateAdjective","adjectiveArray","max6","min6","RADJ","resultingADJ","setRandomAdjective","randomAdjective","generateBodyPart","bodyPartArray","max7","min7","RBP","resultingBP","setRandomBodyPart","randomBodyPart","generateBodyParts","bodyPartsArray","max8","min8","RBPS","resultingBPS","setRandomBodyParts","randomBodyParts","generateLocation","locationArray","max9","min9","RL","resultingL","setRandomLocation","randomLocation","generateColor","colorArray","max10","min10","RC","resultingC","setRandomColor","randomColor","generateNumber","max11","min11","setRandomNum","randomNum"],"sources":["C:/Users/Sarah/OneDrive/Desktop/independent_projects/solo2/client/src/components/ButtonRandom.jsx"],"sourcesContent":["// src = \"https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.9.1/underscore-min.js\";\r\n\r\n// const { Input } = require(\"@material-ui/icons\");\r\n\r\n// import myJson from './dictionary.json' assert {type: 'json'};\r\n\r\n// var dict = JSON.parse(myJson.dictionary);\r\n\r\n// WORD RANDOMIZER (BUTTON)\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Menu } from '@headlessui/react';\r\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';\r\nimport { GrHomeRounded } from 'react-icons/gr';\r\n\r\nexport default function ButtonRandom() {\r\n\r\n    // Noun\r\n    const generateNoun = () => {\r\n        // 200 nouns\r\n        const nounArray = [\r\n            'Actor', 'Advertisement', 'Afternoon', 'Airport', 'Ambulance', 'Animal', 'Answer', 'Apple', 'Army', 'Australia', 'Balloon', 'Banana',\r\n            'Bank', 'Battery', 'Beach', 'Beard', 'Bed', 'Belgium', 'Boy', 'Branch', 'Breakfast', 'Bridge', 'Brother', 'Camera', 'Candle', 'Car',\r\n            'Caravan', 'Carpet', 'Cartoon', 'China', 'Church', 'Coffee', 'Crayon', 'Crowd', 'Daughter', 'Death', 'Denmark', 'Diamond', 'Dinner',\r\n            'Disease', 'Doctor', 'Dog', 'Dream', 'Dress', 'Drum', 'Easter', 'Egg', 'Eggplant', 'Egypt', 'Elephant', 'Energy', 'Engine', 'England',\r\n            'Evening', 'Eye', 'Family', 'Finland', 'Fish', 'Flag', 'Flower', 'Flute', 'Football', 'Forest', 'Fork', 'Fountain', 'France',\r\n            'Furniture', 'Garage', 'Garden', 'Gas', 'Ghost', 'Girl', 'Glass', 'Gold', 'Grass', 'Greece', 'Guitar', 'Hair', 'Hairbrush', 'Hamburger',\r\n            'Helicopter', 'Helmet', 'Holiday', 'Honey', 'Horse', 'Hospital', 'House', 'Hydrogen', 'Ice', 'Insect', 'Insurance', 'Iron', 'Island',\r\n            'Jam', 'Jelly', 'Jewel', 'Judge', 'Juice', 'Kangaroo', 'King', 'Kitchen', 'Kite', 'Knife', 'Knight', 'Lamp', 'Lawyer', 'Letter',\r\n            'Library', 'Lighter', 'Lion', 'Lizard', 'Lock', 'London', 'Lunch', 'Machine', 'Magazine', 'Magician', 'Manchester', 'Market', 'Match',\r\n            'Microscope', 'Microwave', 'Monkey', 'Morning', 'Motorcycle', 'Nail', 'Napkin', 'Needle', 'Nest', 'Nigeria', 'Night', 'Notebook',\r\n            'Ocean', 'Oil', 'Orange', 'Oxygen', 'Oyster', 'Painting', 'Park', 'Parrot', 'Pencil', 'Piano', 'Pillow', 'Pizza', 'Planet', 'Plate',\r\n            'Portugal', 'Potato', 'Queen', 'Quill', 'Rain', 'Rainbow', 'Raincoat', 'Refrigerator', 'Restaurant', 'River', 'Rocket', 'Room',\r\n            'Rose', 'Rwanda', 'Sandwich', 'School', 'Scooter', 'Shampoo', 'Shoe', 'Soccer', 'Spoon', 'Sprinkler', 'Stone', 'Sugar', 'Sweden',\r\n            'Teacher', 'Telephone', 'Tent', 'Thailand', 'Tomato', 'Toothbrush', 'Traffic', 'Train', 'Truck', 'Trumpet', 'Umbrella', 'Universe',\r\n            'Van', 'Vase', 'Vegetable', 'Volcano', 'Wall', 'Whale', 'Window', 'Wine', 'Wire', 'Xylophone', 'Yacht', 'Yellow', 'Youtube', 'Yoyo',\r\n            'Zebra', 'Zipper', 'Zoo'\r\n        ];\r\n        \r\n        let max = nounArray.length - 1;\r\n        let min = 0;\r\n\r\n        let RN = Math.floor(Math.random() * (max - min + 1));\r\n        let resultingN = nounArray[RN];\r\n        console.log(setRandomNoun(resultingN.randomNoun));\r\n    };\r\n    \r\n\r\n\r\n    // Plural Noun\r\n    const generatePluralNoun = () => {\r\n        // 200 plural nouns\r\n        const pluralNounArray = [\r\n            'Actors', 'Advertisements', 'Afternoons', 'Airports', 'Ambulances', 'Animals', 'Answers', 'Apples', 'Armies', 'Atmospheres',\r\n            'Balloons', 'Bananas', 'Banks', 'Batteries', 'Beaches', 'Beards', 'Beds', 'Birds', 'Boys', 'Branches', 'Breakfasts', 'Bridges',\r\n            'Brothers', 'Cameras', 'Candles', 'Cars', 'Caravans', 'Carpets', 'Cartoons', 'Chocolates', 'Churches', 'Coffees', 'Crayons',\r\n            'Crowds', 'Daughters', 'Deaths', 'Debts', 'Diamonds', 'Dinners', 'Diseases', 'Doctors', 'Dogs', 'Dreams', 'Dresses', 'Drums',\r\n            'Ears', 'Editors', 'Eggs', 'Eggplants', 'Elephants', 'Empires', 'Engines', 'Evenings', 'Expressions', 'Eyes', 'Facilities', 'Facts',\r\n            'Families', 'Fishes', 'Flags', 'Flights', 'Flowers', 'Flutes', 'Footballs', 'Forests', 'Forks', 'Fountains', 'Garages', 'Gardens',\r\n            'Gases', 'Ghosts', 'Girls', 'Glasses', 'Governments', 'Grasses', 'Groceries', 'Guitars', 'Hairs', 'Hairbrushes', 'Hamburgers', 'Hats',\r\n            'Helicopters', 'Helmets', 'Holidays', 'Horses', 'Hospitals', 'Hotels', 'Houses', 'Iceburgs', 'Insects', 'Insurances', 'Irons', 'Islands',\r\n            'Jams', 'Jellys', 'Jewels', 'Judges', 'Juices', 'Kangaroos', 'Kings', 'Kitchens', 'Kites', 'Knives', 'Knights', 'Labs', 'Lamps',\r\n            'Lawyers', 'Letters', 'Libraries', 'Lighters', 'Lions', 'Lizards', 'Locks', 'Lunches', 'Machines', 'Magazines', 'Magicians', 'Maps',\r\n            'Markets', 'Matches', 'Microscopes', 'Microwaves', 'Monkeys', 'Mornings', 'Motorcycles', 'Nails', 'Napkins', 'Needles', 'Nests',\r\n            'Newpapers', 'Nights', 'Notebooks', 'Oceans', 'Oils', 'Oranges', 'Ovens', 'Oysters', 'Paintings', 'Parks', 'Parrots', 'Pencils',\r\n            'Photos', 'Pianos', 'Pillows', 'Pizzas', 'Planets', 'Plates', 'Potatoes', 'Queens', 'Quills', 'Rainbows', 'Raincoats', 'Recipes',\r\n            'Reflections', 'Refrigerators', 'Restaurants', 'Rivers', 'Rockets', 'Rooms', 'Roses', 'Sandwiches', 'Schools', 'Scooters', 'Shampoos',\r\n            'Shirts', 'Shoes', 'Spoons', 'Sprinklers', 'Stones', 'Students', 'Sugars', 'Teachers', 'Telephones', 'Televisions', 'Tents',\r\n            'Tomatoes', 'Toothbrushes', 'Towns', 'Trains', 'Trucks', 'Trumpets', 'Umbrellas', 'Uncles', 'Vans', 'Vases', 'Vegetables', 'Volcanoes',\r\n            'Walls', 'Whales', 'Windows', 'Wines', 'Wires', 'Xylophones', 'Yachts', 'Years', 'Youths', 'Yoyos', 'Zebras', 'Zippers', 'Zoos'\r\n        ];\r\n\r\n        let max2 = pluralNounArray.length - 1;\r\n        let min2 = 0;\r\n\r\n        let RPN = Math.floor(Math.random() * (max2 - min2 + 1));\r\n        let resultingPN = pluralNounArray[RPN];\r\n        setRandomPluralNoun(resultingPN.randomPluralNoun);\r\n    };\r\n\r\n\r\n    // Verb\r\n    const generateVerb = () => {\r\n        // 200 verbs\r\n        const verbArray = [\r\n            'Accept', 'Achieve', 'Add', 'Admire', 'Adopt', 'Advise', 'Age', 'Agree', 'Allow', 'Announce', 'Appreciate', 'Approve',\r\n            'Argue', 'Arrive', 'Ask', 'Assist', 'Attack', 'Bake', 'Balance', 'Bathe', 'Be', 'Beat', 'Become', 'Beg', 'Behave', 'Bet',\r\n            'Boast', 'Boil', 'Borrow', 'Breathe', 'Bring', 'Build', 'Burn', 'Bury', 'Buy', 'Call', 'Catch', 'Challenge', 'Change', 'Cheat',\r\n            'Chew', 'Choose', 'Clap', 'Clean', 'Collect', 'Compare', 'Complain', 'Confess', 'Confuse', 'Construct', 'Control', 'Copy', 'Count',\r\n            'Create', 'Cry', 'Damage', 'Dance', 'Deliver', 'Destroy', 'Devote', 'Disagree', 'Drag', 'Drift', 'Drive', 'Drop', 'Earn', 'Eat',\r\n            'Employ', 'Encourage', 'Enjoy', 'Establish', 'Estimate', 'Exercise', 'Expand', 'Explain', 'Fear', 'Feel', 'Fight', 'Find', 'Fly',\r\n            'Forget', 'Forgive', 'Fry', 'Gather', 'Get', 'Give', 'Glow', 'Greet', 'Grow', 'Guess', 'Harass', 'Hate', 'Hear', 'Help', 'Hit',\r\n            'Hope', 'Identify', 'Intend', 'Interrupt', 'Introduce', 'Irritate', 'Jump', 'Keep', 'Kick', 'Kiss', 'Laugh', 'Learn', 'Leave',\r\n            'Lend', 'Lie', 'Lift', 'Like', 'Listen', 'Live', 'Look', 'Lose', 'Love', 'Make', 'Marry', 'Measure', 'Meet', 'Move', 'Murder',\r\n            'Obey', 'Offend', 'Offer', 'Open', 'Owe', 'Paint', 'Pay', 'Peer', 'Pick', 'Play', 'Pray', 'Print', 'Promote', 'Propose', 'Pull',\r\n            'Punch', 'Punish', 'Purchase', 'Push', 'Quit', 'Race', 'Read', 'Recall', 'Relax', 'Remember', 'Reply', 'Resolve', 'Retire', 'Rise',\r\n            'Rub', 'See', 'Select', 'Sell', 'Send', 'Sing', 'Sink', 'Snore', 'Speed', 'Spot', 'Stand', 'Stare', 'Start', 'Stop', 'Struggle',\r\n            'Study', 'Substitute', 'Sweep', 'Swim', 'Tackle', 'Take', 'Talk', 'Teach', 'Tear', 'Telephone', 'Tell', 'Thank', 'Train', 'Travel',\r\n            'Try', 'Type', 'Understand', 'Use', 'Value', 'Visit', 'Vow', 'Wait', 'Walk', 'Want', 'Warn', 'Wed', 'Weep', 'Win', 'Wink', 'Worry',\r\n            'Write', 'Yell', 'Yearn'\r\n        ];\r\n\r\n        let max3 = verbArray.length - 1;\r\n        let min3 = 0;\r\n\r\n        let RV = Math.floor(Math.random() * (max3 - min3 + 1));\r\n        let resultingV = verbArray[RV];\r\n        setRandomVerb(resultingV.randomVerb);\r\n    };\r\n\r\n\r\n    // Verb -ING\r\n    const generateVerbING = () => {\r\n        // 200 verbs ending in -ING\r\n        const verbINGArray = [\r\n            'Accepting', 'Achieving', 'Adding', 'Admiring', 'Adopting', 'Advising', 'Aging', 'Agreeing', 'Allowing', 'Announcing', 'Appreciating',\r\n            'Approving', 'Arguing', 'Arriving', 'Asking', 'Assisting', 'Attacking', 'Baking', 'Balancing', 'Bathing', 'Being', 'Beating',\r\n            'Becoming', 'Begging', 'Behaving', 'Betting', 'Boasting', 'Boiling', 'Borrowing', 'Breathing', 'Bringing', 'Building', 'Burning',\r\n            'Burying', 'Buying', 'Calling', 'Catching', 'Challenging', 'Changing', 'Cheating', 'Chewing', 'Choosing', 'Clapping', 'Cleaning',\r\n            'Collecting', 'Comparing', 'Complaining', 'Confessing', 'Confusing', 'Constructing', 'Controlling', 'Copying', 'Counting', 'Creating',\r\n            'Crying', 'Damaging', 'Dancing', 'Delivering', 'Destroying', 'Devoting', 'Disagreeing', 'Dragging', 'Drifting', 'Driving',\r\n            'Dropping', 'Earning', 'Eating', 'Employing', 'Encouraging', 'Enjoying', 'Establishing', 'Estimating', 'Exercising', 'Expanding',\r\n            'Explaining', 'Fearing', 'Feeling', 'Fighting', 'Finding', 'Flying', 'Forgeting', 'Forgiving', 'Frying', 'Gathering', 'Getting',\r\n            'Giving', 'Glowing', 'Greeting', 'Growing', 'Guessing', 'Harassing', 'Hating', 'Hearing', 'Helping', 'Hitting', 'Hoping',\r\n            'Identifying', 'Intending', 'Interrupting', 'Introducing', 'Irritating', 'Jumping', 'Keeping', 'Kicking', 'Kissing', 'Laughing',\r\n            'Learning', 'Leaving', 'Lending', 'Lying', 'Lifting', 'Liking', 'Listening', 'Living', 'Looking', 'Losing', 'Loving', 'Making',\r\n            'Marrying', 'Measuring', 'Meeting', 'Moving', 'Murdering', 'Obeying', 'Offending', 'Offering', 'Opening', 'Owing', 'Painting',\r\n            'Paying', 'Peering', 'Picking', 'Playing', 'Praying', 'Printing', 'Promoting', 'Proposing', 'Pulling', 'Punching', 'Punishing',\r\n            'Purchasing', 'Pushing', 'Quitting', 'Racing', 'Reading', 'Recalling', 'Relaxing', 'Remembering', 'Replying', 'Resolving',\r\n            'Retiring', 'Rising', 'Rubbing', 'Seeing', 'Selecting', 'Selling', 'Sending', 'Singing', 'Sinking', 'Snoring', 'Speeding', 'Spotting',\r\n            'Standing', 'Staring', 'Starting', 'Stopping', 'Struggling', 'Studying', 'Substituting', 'Sweeping', 'Swimming', 'Tackling',\r\n            'Taking', 'Talking', 'Teaching', 'Tearing', 'Telephoning', 'Telling', 'Thanking', 'Training', 'Traveling', 'Trying', 'Typing',\r\n            'Understanding', 'Using', 'Valuing', 'Visiting', 'Vowing', 'Waiting', 'Walking', 'Wanting', 'Warning', 'Waving', 'Weeping', 'Winning',\r\n            'Winking', 'Worrying', 'Writing', 'Yelling', 'Yearning'\r\n        ];\r\n\r\n        let max4 = verbINGArray.length - 1;\r\n        let min4 = 0;\r\n\r\n        let RVING = Math.floor(Math.random() * (max4 - min4 + 1));\r\n        let resultingVING = verbINGArray[RVING];\r\n        setRandomVerbING(resultingVING.randomVerbING);\r\n    };\r\n\r\n\r\n    // Adverb\r\n    const generateAdverb = () => {\r\n        // 200 adverbs\r\n        const adverbArray = [\r\n            'Absentmindedly', 'Accidentally', 'Actually', 'Adventurously', 'Afterward', 'Almost', 'Always', 'Angrily', 'Anually', 'Anxiously',\r\n            'Arrogantly', 'Awkwardly', 'Bashfully', 'Beautifully', 'Bitterly', 'Bleakly', 'Blindly', 'Blissfully', 'Boastfully', 'Boldly',\r\n            'Bravely', 'Briefly', 'Brightly', 'Briskly', 'Broadly', 'Busily', 'Calmly', 'Carefully', 'Carelessly', 'Cautiously', 'Certainly',\r\n            'Cheerfully', 'Clearly', 'Cleverly', 'Closely', 'Coaxingly', 'Colorfully', 'Commonly', 'Continually', 'Coolly', 'Correctly',\r\n            'Courageously', 'Crossly', 'Cruelly', 'Curiously', 'Daily', 'Daintily', 'Dearly', 'Deceivingly', 'Deeply', 'Defiantly', 'Deliberately',\r\n            'Delightfully', 'Diligently', 'Dimly', 'Doubtfully', 'Dreamily', 'Easily', 'Elegantly', 'Energetically', 'Enormously',\r\n            'Enthusiastically', 'Equally', 'Especially', 'Evenly', 'Eventually', 'Exactly', 'Excitedly', 'Extremely', 'Fairly', 'Faithfully',\r\n            'Famously', 'Hopefully', 'Hungrily', 'Immediately', 'Innocently', 'Inquisitively', 'Instantly', 'Intensely', 'Interestingly',\r\n            'Inwardly', 'Irritably', 'Jaggedly', 'Loosely', 'Nearly', 'Neatly', 'Nervously', 'Never', 'Nicely', 'Noisily', 'Not', 'Obediently',\r\n            'Obnoxiously', 'Oddly', 'Offensively', 'Officially', 'Often', 'Only', 'Openly', 'Optimistically', 'Overconfidently', 'Painfully',\r\n            'Partially', 'Patiently', 'Permanently', 'Perfectly', 'Personally', 'Physically', 'Playfully', 'Politely', 'Poorly', 'Positively',\r\n            'Potentially', 'Powerfully', 'Promptly', 'Properly', 'Punctually', 'Quintly', 'Queasily', 'Questionably', 'Quicker', 'Quickly',\r\n            'Quietly', 'Quirkly', 'Quizzically', 'Randomly', 'Rapidly', 'Rarely', 'Readily', 'Really', 'Reassuringly', 'Recklessly', 'Regularly',\r\n            'Reluctantly', 'Repeatedly', 'Reproachfully', 'Restfully', 'Righteously', 'Rightfully', 'Rigidly', 'Roughly', 'Rudely', 'Safely',\r\n            'Scarcely', 'Scarily', 'Searchingly', 'Sedately', 'Seemingly', 'Seldomly', 'Selfishly', 'Separately', 'Seriously', 'Shakily',\r\n            'Sharply', 'Sheepishly', 'Shrilly', 'Shyly', 'Silently', 'Sleepily', 'Slowly', 'Smoothly', 'Softly', 'Solemnly', 'Solidly', 'Sometimes',\r\n            'Soon', 'Speedily', 'Stealthily', 'Sternly', 'Strictly', 'Successfully', 'Suddenly', 'Supposedly', 'Surprisingly', 'Suspiciously',\r\n            'Sweetly', 'Swiftly', 'Sympathetically', 'Tenderly', 'Tensely', 'Terribly', 'Thankfully', 'Thoroughly', 'Thoughtfully', 'Tightly',\r\n            'Tommorrow', 'Too', 'Tremendously', 'Triumphantly', 'Truly', 'Ultimately', 'Unabashedly', 'Unaccountably', 'Unbearably', 'Unethically',\r\n            'Unexpectedly', 'Unfortunately', 'Unimpressively', 'Unnaturally', 'Urgently'\r\n        ];\r\n\r\n        let max5 = adverbArray.length - 1;\r\n        let min5 = 0;\r\n        \r\n        let RADV = Math.floor(Math.random() * (max5 - min5 + 1));\r\n        let resultingADV = adverbArray[RADV];\r\n        setRandomAdverb(resultingADV.randomAdverb);\r\n    };\r\n\r\n\r\n    // Adjective\r\n    const generateAdjective = () => {\r\n        // 200 adjectives\r\n        const adjectiveArray = [\r\n            'Abandoned', 'Abnormal', 'Absolute', 'Acedemic', 'Accidental', 'Accurate', 'Active', 'Adaptable', 'Adjustable', 'Adventurous',\r\n            'Afraid', 'Alert', 'Ambitious', 'Ancient', 'Arrogant', 'Average', 'Awful', 'Bashful', 'Basic', 'Beautiful', 'Best', 'Big',\r\n            'Bitter', 'Black', 'Blue', 'Blushing', 'Boring', 'Brave', 'Breezy', 'Bumpy', 'Busy', 'Calm', 'Careless', 'Caring', 'Cautious',\r\n            'Charming', 'Cheap', 'Chilly', 'Colorful', 'Common', 'Cool', 'Curly', 'Cute', 'Damaged', 'Damp', 'Dark', 'Depressed', 'Descriptive',\r\n            'Different', 'Difficult', 'Dirty', 'Dry', 'Dull' ,'Dusty', 'Eager', 'Easy', 'Earthy', 'Edible', 'Efficient', 'Emotional',\r\n            'Empty', 'Exclusive', 'Exotic', 'Expensive', 'Far', 'Fast', 'Fat', 'Flaky', 'Flat', 'Flimsy', 'Foreign', 'Fresh', 'Full', 'Funny',\r\n            'Furry', 'Gaudy', 'Gentle', 'Gifted', 'Good', 'Great', 'Greedy', 'Green', 'Grey', 'Groovy', 'Grumpy', 'Gullible', 'Hairy', 'Handy',\r\n            'Happy', 'Hard', 'Heavy', 'Hesitant', 'Hilarious', 'Hollow', 'Hot', 'Icky', 'Icy', 'Ignorant', 'Ill', 'Important', 'Insidious',\r\n            'Invincible', 'Jaded', 'Jolly', 'Joyous', 'Juicy', 'Kind', 'Large', 'Late', 'Lazy', 'Lean', 'Left', 'Light', 'Little', 'Long',\r\n            'Loud', 'Loving', 'Lucky', 'Lush', 'Mad', 'Magenta', 'Magical', 'Many', 'Mature', 'Mean', 'Mellow', 'Melted', 'Mixed', 'Muddy',\r\n            'Narrow', 'Natural', 'Neat', 'Nervous', 'New', 'Nice', 'Nifty', 'Nimble', 'Noisy', 'Observant', 'Odd', 'Old', 'Omniscient', 'Open',\r\n            'Orange', 'Ordinary', 'Organic', 'Outgoing', 'Overrated', 'Perfect', 'Pink', 'Popular', 'Precious', 'Pretty', 'Private', 'Proud',\r\n            'Purple', 'Pushy', 'Quick', 'Quiet', 'Quiky', 'Rare', 'Ratty', 'Red', 'Rhetorical', 'Ripe', 'Rough', 'Round', 'Rude', 'Salty',\r\n            'Scarce', 'Secret', 'Shy', 'Sleepy', 'Sour', 'Spicy', 'Steep', 'Stiff', 'Suspicious', 'Sweet', 'Tall', 'Tangy', 'Tense', 'Terrible',\r\n            'Thick', 'Tidy', 'Tiny', 'Tired', 'Tricky', 'Ugly', 'Unbiased', 'Unique', 'Upset', 'Vague', 'Warm', 'Weak', 'Wet', 'Whole', 'Wise',\r\n            'Young', 'Zesty'\r\n        ];\r\n\r\n        let max6 = adjectiveArray.length - 1;\r\n        let min6 = 0;\r\n\r\n        let RADJ = Math.floor(Math.random() * (max6 - min6 + 1));\r\n        let resultingADJ = adjectiveArray[RADJ];\r\n        setRandomAdjective(resultingADJ.randomAdjective);\r\n    };\r\n\r\n\r\n    // Body Part\r\n    const generateBodyPart = () => {\r\n        // 29 body part\r\n        const bodyPartArray = [\r\n            'Arm', 'Cheek', 'Chest', 'Chin', 'Ear', 'Elbow', 'Eyebrow', 'Eye', 'Face', 'Finger', 'Foot', 'Forehead', 'Hand', 'Hair', 'Head',\r\n            'Heel', 'Jaw', 'Knee', 'Knuckle', 'Leg', 'Mouth', 'Neck', 'Nose', 'Shin', 'Shoulder', 'Stomach', 'Toe', 'Tongue', 'Tooth'\r\n        ];\r\n\r\n        let max7 = bodyPartArray.length - 1;\r\n        let min7 = 0;\r\n\r\n        let RBP = Math.floor(Math.random() * (max7 - min7 + 1));\r\n        let resultingBP = bodyPartArray[RBP];\r\n        setRandomBodyPart(resultingBP.randomBodyPart);\r\n    };\r\n\r\n\r\n    // Body Parts\r\n    const generateBodyParts = () => {\r\n        // 20 body parts\r\n        const bodyPartsArray = [\r\n            'Arms', 'Cheeks', 'Ears', 'Elbows', 'Eyebrows', 'Eyes', 'Fingers', 'Feet', 'Hands', 'Hairs', 'Heels', 'Knees', 'Knuckles', 'Legs',\r\n            'Nails', 'Shins', 'Shoulders', 'Teeth', 'Toes', 'Tonsils'\r\n        ];\r\n\r\n        let max8 = bodyPartsArray.length - 1;\r\n        let min8 = 0;\r\n\r\n        let RBPS = Math.floor(Math.random() * (max8 - min8 + 1));\r\n        let resultingBPS = bodyPartsArray[RBPS];\r\n        setRandomBodyParts(resultingBPS.randomBodyParts);\r\n    };\r\n\r\n\r\n    // Location\r\n    const generateLocation = () => {\r\n        // 28 locations\r\n        const locationArray = [\r\n            'City', 'Home', 'Hospital', 'Office', 'Park', 'School', 'Veterinarian', 'Adana, Turkey', 'Akita, Japan', 'Athens, Greece',\r\n            'Bangkok, Thailand', 'Beijing, China', 'Berlin, Germany', 'Cairo, Egypt', 'Chicago, IL', 'Delavan, WI', 'Dublin, Ireland', 'Fargo, ND',\r\n            'Havana, Cuba', 'London, England', 'Montreal, Canada', 'Newcastle, Australia', 'Odense, Denmark', 'Paris, France', 'Rome, Italy',\r\n            'Seoul, South Korea', 'Sevilla, Spain', 'Warsaw, Poland'\r\n        ];\r\n\r\n            let max9 = locationArray.length - 1;\r\n            let min9 = 0;\r\n\r\n            let RL = Math.floor(Math.random() * (max9 - min9 + 1));\r\n            let resultingL = locationArray[RL];\r\n            setRandomLocation(resultingL.randomLocation);\r\n        };\r\n\r\n\r\n    // Color\r\n    const generateColor = () => {\r\n        // 40 colors\r\n        const colorArray = [\r\n            'red', 'maroon', 'mauve', 'fuchsia', 'magenta', 'peach', 'pink', 'orange', 'tangerine', 'yellow', 'lemon', 'green', 'mint',\r\n            'jade', 'lime', 'emerald', 'olive', 'blue', 'cyan', 'denim', 'indigo', 'teal', 'turquoise', 'navy', 'purple', 'lavender',\r\n            'violet', 'amethyst', 'plum', 'black', 'white', 'grey', 'gold', 'silver', 'bronze', 'amber', 'tan', 'brown'\r\n        ];\r\n\r\n        let max10 = colorArray.length - 1;\r\n        let min10 = 0;\r\n\r\n        let RC = Math.floor(Math.random() * (max10 - min10 + 1));\r\n        let resultingC = colorArray[RC];\r\n        setRandomColor(resultingC.randomColor);\r\n    };\r\n\r\n\r\n    // Number\r\n    const generateNumber = () => {\r\n        // random number generator\r\n        let max11 = 1000;\r\n        let min11 = 0;\r\n\r\n        let RN = Math.floor(Math.random() * (max11 - min11 + 1));\r\n        setRandomNum(RN.randomNum);\r\n    };\r\n\r\n\r\n    const [ randomNoun, setRandomNoun ] = useState('');\r\n    const [ randomPluralNoun, setRandomPluralNoun ] = useState('');\r\n    const [ randomVerb, setRandomVerb ] = useState('');\r\n    const [ randomVerbING, setRandomVerbING ] = useState('');\r\n    const [ randomAdverb, setRandomAdverb ] = useState('');\r\n    const [ randomAdjective, setRandomAdjective ] = useState('');\r\n    const [ randomBodyPart, setRandomBodyPart ] = useState('');\r\n    const [ randomBodyParts, setRandomBodyParts ] = useState('');\r\n    const [ randomLocation, setRandomLocation ] = useState('');\r\n    const [ randomColor, setRandomColor ] = useState('');\r\n    const [ randomNum, setRandomNum ] = useState('');\r\n\r\n    return(\r\n        <div className=\"px-6 py-10 ring-1 ring-slate-900/5 shadow-xl\">\r\n            <h3 className=\"text-slate-900 mt-5 text-base font-medium\">Random Word Generator</h3>\r\n                <div className=\"text-slate-500 dark:text-slate-400 mt-2 text-xs\">\r\n                <div className=\"relative\">\r\n                    <p className=\"display-results\">{}</p>\r\n                    <button className=\"bg-red-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3 sm:mb-3\">\r\n                        Noun\r\n                    </button>\r\n                    <button className=\"bg-green-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Plural Noun\r\n                    </button>\r\n                    <button className=\"bg-purple-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Verb\r\n                    </button>\r\n                    <button className=\"bg-blue-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Verb-ING\r\n                    </button>\r\n                    <button className=\"bg-orange-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Adverb\r\n                    </button>\r\n                    <button className=\"bg-teal-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Adjective\r\n                    </button>\r\n                    <button className=\"bg-pink-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Body Part\r\n                    </button>\r\n                    <button className=\"bg-yellow-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Body Parts\r\n                    </button>\r\n                    <button className=\"bg-emerald-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Location\r\n                    </button>\r\n                    <button className=\"bg-sky-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Color\r\n                    </button>\r\n                    <button className=\"bg-rose-500 text-white px-2 rounded-full mx-1 sm:mx-3 sm:mt-3\">\r\n                        Number\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}